#!/usr/bin/env bash

function main {
  local shome="$(cd -P -- "${BASH_SOURCE%/*}/.." && pwd -P)"
  source "${BLOCK_PATH:-"$shome/work"}/block/script/profile" ~
  source normalize  

  local hst_remote="${1}"; shift

  case "${hst_remote}" in
    */*)
      tx kv "${hst_remote}" "$@"
      return $?
      ;;
  esac

  local hst_rsync="$hst_remote"
  case "$hst_rsync" in
    *:*:*)
      hst_rsync="[$hst_rsync]"
      ;;
  esac

  local loader="ssh $hst_remote"
  local rsync="ssh"

  ssh $hst_remote tmux detach-client -s default || true &

  local fn_remote=".tx-remote"
  rsync -ia -e "$rsync" "$(which tx-remote)" "$hst_rsync:$fn_remote" &

  if [[ "$hst_remote" != "localhost" ]]; then
    (
      local pth_socket="$($loader gpgconf --list-dir | grep agent-socket: | perl -pe 's{agent-socket:}{};s{\s+$}{}')"
      if [[ -n "$pth_socket" ]]; then
        $loader pkill -9 gpg-agent || true
        $loader rm -fv "${pth_socket}"
      fi
    ) &

    rsync -ia -e "$rsync" ~/.aws "$hst_rsync": &
    if [[ -d ~/.awsvault ]]; then
      rsync -ia -e "$rsync" ~/.awsvault  --exclude '*session*' "$hst_rsync": &
    fi
    if [[ -d ~/.op ]]; then
      (set +f; rsync -ia -e "$rsync"  ~/.op/* "$hst_rsync":.op/) &
    fi
    if [[ -d ~/.hab/cache/keys ]]; then
      (set +f; rsync -ia -e "$rsync"  ~/.hab/cache/keys/. "$hst_rsync":.hab/cache/keys/.) &
    fi

    wait

    $loader mkdir -p .env.d
    gpg2 --card-status 2>&1 | grep 'General key info' | awk '{print $NF}' | cut -d'<' -f2 | cut -d'>' -f1 | $loader tee .env.d/CONFIG_GPG_RECIPIENT
  fi &

  wait

  tx title "${1:-${hst_remote}}"

  set -x
  ssh $hst_remote -tA ${pth_socket:+-R "${pth_socket}":/tmp/S.forwarded} \
    -o ServerAliveInterval=30 -o ServerAliveCountMax=3 -o ControlMaster=no -S none \
      env TERM_PROGRAM=${TERM_PROGRAM:-} CUE_SCHEME=${CUE_SCHEME:-} "./$fn_remote" attach
}

source sub "$BASH_SOURCE" "$@"
